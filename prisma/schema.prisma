generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Invoice {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  customer      String
  date          String
  invoiceNumber String
  licencePlate  String
  payment       String
  time          String
  vehicle       String
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?         @unique
  emailVerified DateTime?       
  image         String?
  password      String?
  role          UserRole       @default(USER)
  isTwoFactorEnabled Boolean @default(false)
  twoFactorConfirmation TwoFactorConfirmation?
}

model VerificationToken {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  token     String @unique
  email     String
  expires   DateTime
  @@unique([token, email])
}

model PasswordResetToken {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  token     String @unique
  email     String
  expires   DateTime
  @@unique([token, email])
}

model TwoFactorToken {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  token     String @unique
  email     String
  expires   DateTime
  @@unique([token, email])
}

model TwoFactorConfirmation {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  userId    String @db.ObjectId
  user    User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}